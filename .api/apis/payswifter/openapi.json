{
  "openapi": "3.0.2",
  "info": {
    "title": "PaySwifter API",
    "version": "2.0"
  },
  "paths": {
    "/charges/{charge_id}": {
      "get": {
        "tags": [
          "Charges"
        ],
        "summary": "Get Charge",
        "operationId": "get_charge",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Charge Id",
              "type": "string",
              "format": "id"
            },
            "name": "charge_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ChargeReportWithTransfers",
                  "required": [
                    "order_id",
                    "organization_id",
                    "external_ticket_id",
                    "order_amount",
                    "order_status",
                    "track_number",
                    "create_date",
                    "store_name",
                    "ach_transfers"
                  ],
                  "type": "object",
                  "properties": {
                    "marketplace_id": {
                      "title": "Marketplace Id",
                      "type": "string"
                    },
                    "order_id": {
                      "title": "Order Id",
                      "type": "string",
                      "format": "id"
                    },
                    "charge_id": {
                      "title": "Charge Id",
                      "type": "string",
                      "format": "id"
                    },
                    "organization_id": {
                      "title": "Organization Id",
                      "type": "string",
                      "format": "id"
                    },
                    "external_ticket_id": {
                      "title": "External Ticket Id",
                      "type": "string"
                    },
                    "external_customer_id": {
                      "title": "External Customer Id",
                      "type": "string"
                    },
                    "external_ticket_short_id": {
                      "title": "External Ticket Short Id",
                      "type": "string"
                    },
                    "order_amount": {
                      "title": "Order Amount",
                      "maximum": 9223372036854776000,
                      "minimum": 0,
                      "type": "integer"
                    },
                    "charge_amount": {
                      "title": "Charge Amount",
                      "maximum": 9223372036854776000,
                      "minimum": 0,
                      "type": "integer"
                    },
                    "tip_amount": {
                      "title": "Tip Amount",
                      "maximum": 9223372036854776000,
                      "minimum": 0,
                      "type": "integer"
                    },
                    "convenience_fee": {
                      "title": "Convenience Fee",
                      "maximum": 9223372036854776000,
                      "minimum": 0,
                      "type": "integer"
                    },
                    "platform_fee": {
                      "title": "Platform Fee",
                      "maximum": 9223372036854776000,
                      "minimum": 0,
                      "type": "integer"
                    },
                    "order_status": {
                      "title": "OrderStatus",
                      "enum": [
                        "submitted",
                        "total_finalized",
                        "delivered",
                        "charged",
                        "canceled"
                      ],
                      "type": "string",
                      "description": "An enumeration."
                    },
                    "charge_status": {
                      "title": "ChargeStatus",
                      "enum": [
                        "pending",
                        "succeeded",
                        "failed"
                      ],
                      "type": "string",
                      "description": "An enumeration."
                    },
                    "track_number": {
                      "title": "Track Number",
                      "type": "string"
                    },
                    "create_date": {
                      "title": "Create Date",
                      "type": "string",
                      "format": "date-time"
                    },
                    "type": {
                      "title": "ChargeType",
                      "enum": [
                        "ACH_DEBIT"
                      ],
                      "type": "string",
                      "description": "An enumeration."
                    },
                    "store_name": {
                      "title": "Store Name",
                      "type": "string"
                    },
                    "bank_account_name": {
                      "title": "Bank Account Name",
                      "type": "string"
                    },
                    "bank_name": {
                      "title": "Bank Name",
                      "type": "string"
                    },
                    "consumer_first_name": {
                      "title": "Consumer First Name",
                      "type": "string"
                    },
                    "consumer_last_name": {
                      "title": "Consumer Last Name",
                      "type": "string"
                    },
                    "ach_transfers": {
                      "title": "Ach Transfers",
                      "type": "array",
                      "items": {
                        "title": "AchDebitTransferWithError",
                        "required": [
                          "id",
                          "charge_id",
                          "organization_id",
                          "description",
                          "status",
                          "create_date",
                          "settled_date",
                          "amount",
                          "track_number"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Id",
                            "type": "string",
                            "format": "id"
                          },
                          "charge_id": {
                            "title": "Charge Id",
                            "type": "string",
                            "format": "id"
                          },
                          "organization_id": {
                            "title": "Organization Id",
                            "type": "string",
                            "format": "id"
                          },
                          "balance_transaction_id": {
                            "title": "Balance Transaction Id",
                            "type": "string",
                            "format": "id"
                          },
                          "description": {
                            "title": "Description",
                            "type": "string"
                          },
                          "ach_transfer_id_external": {
                            "title": "Ach Transfer Id External",
                            "type": "string"
                          },
                          "status": {
                            "title": "AchTransferStatus",
                            "enum": [
                              "inited",
                              "pending",
                              "submitted",
                              "settled",
                              "failed"
                            ],
                            "type": "string",
                            "description": "An enumeration."
                          },
                          "create_date": {
                            "title": "Create Date",
                            "type": "string",
                            "format": "date-time"
                          },
                          "settled_date": {
                            "title": "Settled Date",
                            "type": "string",
                            "format": "date-time"
                          },
                          "amount": {
                            "title": "Amount",
                            "maximum": 9223372036854776000,
                            "minimum": 1,
                            "type": "integer"
                          },
                          "track_number": {
                            "title": "Track Number",
                            "type": "string"
                          },
                          "error": {
                            "title": "Error",
                            "required": [
                              "code",
                              "reason",
                              "description",
                              "create_date"
                            ],
                            "type": "object",
                            "properties": {
                              "code": {
                                "title": "AchReturnCode",
                                "enum": [
                                  "R01",
                                  "R02",
                                  "R03",
                                  "R04",
                                  "R05",
                                  "R06",
                                  "R07",
                                  "R08",
                                  "R09",
                                  "R10",
                                  "R11",
                                  "R12",
                                  "R13",
                                  "R14",
                                  "R15",
                                  "R16",
                                  "R17",
                                  "R20",
                                  "R21",
                                  "R22",
                                  "R23",
                                  "R24",
                                  "R29",
                                  "R31",
                                  "R33",
                                  "R34",
                                  "R35",
                                  "R36",
                                  "R37",
                                  "R38",
                                  "R39",
                                  "R40",
                                  "R41",
                                  "R42",
                                  "R43",
                                  "R44",
                                  "R45",
                                  "R46",
                                  "R47",
                                  "R50",
                                  "R51",
                                  "R52",
                                  "R53",
                                  "R61",
                                  "R67",
                                  "R68",
                                  "R69",
                                  "R70",
                                  "R71",
                                  "R72",
                                  "R73",
                                  "R74",
                                  "R75",
                                  "R76",
                                  "R80",
                                  "R81",
                                  "R82",
                                  "R83",
                                  "R84"
                                ],
                                "type": "string",
                                "description": "An enumeration."
                              },
                              "reason": {
                                "title": "Reason",
                                "type": "string"
                              },
                              "description": {
                                "title": "Description",
                                "type": "string"
                              },
                              "create_date": {
                                "title": "Create Date",
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotExistResponse",
                  "required": [
                    "error_code",
                    "error_message",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "title": "Error Code",
                      "type": "string"
                    },
                    "error_message": {
                      "title": "Error Message",
                      "type": "string"
                    },
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AuthenticationErrorResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotHavePermissionResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Oauth2ClientCredentials": []
          }
        ]
      }
    },
    "/charges": {
      "get": {
        "tags": [
          "Charges"
        ],
        "summary": "List Charges",
        "operationId": "list_charges",
        "parameters": [
          {
            "description": "Accepts `next_key` or `prev_key` from a valid paginated response",
            "required": false,
            "schema": {
              "title": "Key",
              "type": "string",
              "description": "Accepts `next_key` or `prev_key` from a valid paginated response"
            },
            "name": "key",
            "in": "query"
          },
          {
            "description": "Number of items to fetch",
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "Number of items to fetch",
              "default": 25
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ChargeReportsPage",
                  "required": [
                    "total_count",
                    "prev_key",
                    "items",
                    "next_key"
                  ],
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "title": "Total Count",
                      "type": "integer",
                      "description": "Total number of items found for the query"
                    },
                    "prev_key": {
                      "title": "Prev Key",
                      "type": "string",
                      "description": "Cursor for the previous page"
                    },
                    "items": {
                      "title": "Items",
                      "type": "array",
                      "items": {
                        "title": "ChargeReport",
                        "required": [
                          "order_id",
                          "organization_id",
                          "external_ticket_id",
                          "order_amount",
                          "order_status",
                          "track_number",
                          "create_date",
                          "store_name"
                        ],
                        "type": "object",
                        "properties": {
                          "marketplace_id": {
                            "title": "Marketplace Id",
                            "type": "string"
                          },
                          "order_id": {
                            "title": "Order Id",
                            "type": "string",
                            "format": "id"
                          },
                          "charge_id": {
                            "title": "Charge Id",
                            "type": "string",
                            "format": "id"
                          },
                          "organization_id": {
                            "title": "Organization Id",
                            "type": "string",
                            "format": "id"
                          },
                          "external_ticket_id": {
                            "title": "External Ticket Id",
                            "type": "string"
                          },
                          "external_customer_id": {
                            "title": "External Customer Id",
                            "type": "string"
                          },
                          "external_ticket_short_id": {
                            "title": "External Ticket Short Id",
                            "type": "string"
                          },
                          "order_amount": {
                            "title": "Order Amount",
                            "maximum": 9223372036854776000,
                            "minimum": 0,
                            "type": "integer"
                          },
                          "charge_amount": {
                            "title": "Charge Amount",
                            "maximum": 9223372036854776000,
                            "minimum": 0,
                            "type": "integer"
                          },
                          "tip_amount": {
                            "title": "Tip Amount",
                            "maximum": 9223372036854776000,
                            "minimum": 0,
                            "type": "integer"
                          },
                          "convenience_fee": {
                            "title": "Convenience Fee",
                            "maximum": 9223372036854776000,
                            "minimum": 0,
                            "type": "integer"
                          },
                          "platform_fee": {
                            "title": "Platform Fee",
                            "maximum": 9223372036854776000,
                            "minimum": 0,
                            "type": "integer"
                          },
                          "order_status": {
                            "title": "OrderStatus",
                            "enum": [
                              "submitted",
                              "total_finalized",
                              "delivered",
                              "charged",
                              "canceled"
                            ],
                            "type": "string",
                            "description": "An enumeration."
                          },
                          "charge_status": {
                            "title": "ChargeStatus",
                            "enum": [
                              "pending",
                              "succeeded",
                              "failed"
                            ],
                            "type": "string",
                            "description": "An enumeration."
                          },
                          "track_number": {
                            "title": "Track Number",
                            "type": "string"
                          },
                          "create_date": {
                            "title": "Create Date",
                            "type": "string",
                            "format": "date-time"
                          },
                          "type": {
                            "title": "ChargeType",
                            "enum": [
                              "ACH_DEBIT"
                            ],
                            "type": "string",
                            "description": "An enumeration."
                          },
                          "store_name": {
                            "title": "Store Name",
                            "type": "string"
                          },
                          "bank_account_name": {
                            "title": "Bank Account Name",
                            "type": "string"
                          },
                          "bank_name": {
                            "title": "Bank Name",
                            "type": "string"
                          },
                          "consumer_first_name": {
                            "title": "Consumer First Name",
                            "type": "string"
                          },
                          "consumer_last_name": {
                            "title": "Consumer Last Name",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "next_key": {
                      "title": "Next Key",
                      "type": "string",
                      "description": "Cursor for the next page."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AuthenticationErrorResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotHavePermissionResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Oauth2ClientCredentials": []
          }
        ]
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "List Orders",
        "description": "Get all orders",
        "operationId": "list_orders",
        "parameters": [
          {
            "description": "Accepts `next_key` or `prev_key` from a valid paginated response",
            "required": false,
            "schema": {
              "title": "Key",
              "type": "string",
              "description": "Accepts `next_key` or `prev_key` from a valid paginated response"
            },
            "name": "key",
            "in": "query"
          },
          {
            "description": "Number of items to fetch",
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "Number of items to fetch",
              "default": 25
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "OrdersPage",
                  "required": [
                    "total_count",
                    "prev_key",
                    "items",
                    "next_key"
                  ],
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "title": "Total Count",
                      "type": "integer",
                      "description": "Total number of items found for the query"
                    },
                    "prev_key": {
                      "title": "Prev Key",
                      "type": "string",
                      "description": "Cursor for the previous page"
                    },
                    "items": {
                      "title": "Items",
                      "type": "array",
                      "items": {
                        "title": "Order",
                        "required": [
                          "id",
                          "create_date",
                          "organization_id",
                          "total_amount",
                          "status",
                          "track_number"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Id",
                            "type": "string",
                            "format": "id"
                          },
                          "create_date": {
                            "title": "Create Date",
                            "type": "string",
                            "format": "date-time"
                          },
                          "store_id": {
                            "title": "Store Id",
                            "type": "string",
                            "format": "id"
                          },
                          "charge_id": {
                            "title": "Charge Id",
                            "type": "string",
                            "format": "id"
                          },
                          "organization_id": {
                            "title": "Organization Id",
                            "type": "string",
                            "format": "id"
                          },
                          "marketplace_id": {
                            "title": "Marketplace Id",
                            "type": "string"
                          },
                          "delivered_date": {
                            "title": "Delivered Date",
                            "type": "string",
                            "format": "date-time"
                          },
                          "total_amount": {
                            "title": "Total Amount",
                            "anyOf": [
                              {
                                "maximum": 9223372036854776000,
                                "minimum": 1,
                                "type": "integer"
                              },
                              {
                                "maximum": 9223372036854776000,
                                "minimum": 0,
                                "type": "integer"
                              }
                            ]
                          },
                          "status": {
                            "title": "OrderStatus",
                            "enum": [
                              "submitted",
                              "total_finalized",
                              "delivered",
                              "charged",
                              "canceled"
                            ],
                            "type": "string",
                            "description": "An enumeration."
                          },
                          "track_number": {
                            "title": "Track Number",
                            "type": "string"
                          },
                          "updated_at": {
                            "title": "Updated At",
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "next_key": {
                      "title": "Next Key",
                      "type": "string",
                      "description": "Cursor for the next page."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AuthenticationErrorResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotHavePermissionResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Oauth2ClientCredentials": []
          }
        ]
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Create Order",
        "description": "Create an order",
        "operationId": "create_order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "OrderCreateDTO",
                "required": [
                  "session_id"
                ],
                "type": "object",
                "properties": {
                  "session_id": {
                    "title": "Session Id",
                    "type": "string",
                    "description": "The session id for which the order has to be created.",
                    "format": "id"
                  },
                  "pos": {
                    "allOf": [
                      {
                        "title": "PosName",
                        "enum": [
                          "treez"
                        ],
                        "type": "string",
                        "description": "An enumeration."
                      }
                    ],
                    "description": "Name of the pos integration to be associated with this order, If applicable"
                  },
                  "external_id": {
                    "title": "External Id",
                    "maxLength": 40,
                    "type": "string",
                    "description": "External Identifier that corresponds to this order. Has to be unique."
                  },
                  "short_id": {
                    "title": "Short Id",
                    "maxLength": 6,
                    "type": "string",
                    "description": "Human friendly id that will be displayed in the dashboard."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "OrderPostResponseSchema",
                  "required": [
                    "order",
                    "session"
                  ],
                  "type": "object",
                  "properties": {
                    "order": {
                      "title": "Order",
                      "required": [
                        "id",
                        "create_date",
                        "organization_id",
                        "total_amount",
                        "status",
                        "track_number"
                      ],
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "Id",
                          "type": "string",
                          "format": "id"
                        },
                        "create_date": {
                          "title": "Create Date",
                          "type": "string",
                          "format": "date-time"
                        },
                        "store_id": {
                          "title": "Store Id",
                          "type": "string",
                          "format": "id"
                        },
                        "charge_id": {
                          "title": "Charge Id",
                          "type": "string",
                          "format": "id"
                        },
                        "organization_id": {
                          "title": "Organization Id",
                          "type": "string",
                          "format": "id"
                        },
                        "marketplace_id": {
                          "title": "Marketplace Id",
                          "type": "string"
                        },
                        "delivered_date": {
                          "title": "Delivered Date",
                          "type": "string",
                          "format": "date-time"
                        },
                        "total_amount": {
                          "title": "Total Amount",
                          "anyOf": [
                            {
                              "maximum": 9223372036854776000,
                              "minimum": 1,
                              "type": "integer"
                            },
                            {
                              "maximum": 9223372036854776000,
                              "minimum": 0,
                              "type": "integer"
                            }
                          ]
                        },
                        "status": {
                          "title": "OrderStatus",
                          "enum": [
                            "submitted",
                            "total_finalized",
                            "delivered",
                            "charged",
                            "canceled"
                          ],
                          "type": "string",
                          "description": "An enumeration."
                        },
                        "track_number": {
                          "title": "Track Number",
                          "type": "string"
                        },
                        "updated_at": {
                          "title": "Updated At",
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "additionalProperties": false
                    },
                    "session": {
                      "title": "Session",
                      "required": [
                        "id",
                        "create_date",
                        "status",
                        "organization_id",
                        "type",
                        "total_amount",
                        "is_valid_consumer",
                        "is_valid_bank_account_selected",
                        "is_sufficient_funds",
                        "fees",
                        "track_number"
                      ],
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "Id",
                          "type": "string",
                          "description": "The session identifier.",
                          "format": "id"
                        },
                        "create_date": {
                          "title": "Create Date",
                          "type": "string",
                          "description": "ISO 8601 datetime on which the session was created.",
                          "format": "date-time"
                        },
                        "status": {
                          "allOf": [
                            {
                              "title": "SessionStatus",
                              "enum": [
                                "started",
                                "completed",
                                "finalized "
                              ],
                              "type": "string",
                              "description": "An enumeration."
                            }
                          ],
                          "description": "This indicates the current status of the session."
                        },
                        "organization_id": {
                          "title": "Organization Id",
                          "type": "string",
                          "description": "The identifier of the organization this session belongs to.",
                          "format": "id"
                        },
                        "type": {
                          "allOf": [
                            {
                              "title": "SessionType",
                              "enum": [
                                "consumer_checkout",
                                "in_store_checkout"
                              ],
                              "type": "string",
                              "description": "An enumeration."
                            }
                          ],
                          "description": "The type of the session."
                        },
                        "total_amount": {
                          "title": "Total Amount",
                          "maximum": 9223372036854776000,
                          "minimum": 1,
                          "type": "integer",
                          "description": "The session amount in the minor unit of the currency. For dollars, for example, this is cents."
                        },
                        "is_valid_consumer": {
                          "title": "Is Valid Consumer",
                          "type": "boolean",
                          "description": "Whether or not this session has been associated with a consumer."
                        },
                        "is_valid_bank_account_selected": {
                          "title": "Is Valid Bank Account Selected",
                          "type": "boolean",
                          "description": "Whether or not a valid bank account has been associated with this session by a consumer."
                        },
                        "is_sufficient_funds": {
                          "title": "Is Sufficient Funds",
                          "type": "boolean",
                          "description": "Whether or not there are sufficient funds in the associated bank account."
                        },
                        "consent_text": {
                          "title": "Consent Text",
                          "type": "string",
                          "description": "The consent text which the customer agreed to.",
                          "default": "I authorize Swifter to debit my bank account and save my authorization for future use with Swifter."
                        },
                        "fees": {
                          "title": "Fees",
                          "maximum": 9223372036854776000,
                          "minimum": 0,
                          "type": "integer",
                          "description": "The session fees amount in the minor unit of the currency. For dollars, for example, this is cents."
                        },
                        "track_number": {
                          "title": "Track Number",
                          "type": "string",
                          "description": "A human-friendly identifier associated with the session."
                        },
                        "marketplace_id": {
                          "title": "Marketplace Id",
                          "type": "string",
                          "description": "The identifier of marketplace which created this session."
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotExistResponse",
                  "required": [
                    "error_code",
                    "error_message",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "title": "Error Code",
                      "type": "string"
                    },
                    "error_message": {
                      "title": "Error Message",
                      "type": "string"
                    },
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AuthenticationErrorResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Oauth2ClientCredentials": []
          }
        ]
      }
    },
    "/orders/{order_id}/cancel": {
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Cancel Order By Id",
        "operationId": "cancel_order",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Order Id",
              "type": "string",
              "format": "id"
            },
            "name": "order_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Order",
                  "required": [
                    "id",
                    "create_date",
                    "organization_id",
                    "total_amount",
                    "status",
                    "track_number"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Id",
                      "type": "string",
                      "format": "id"
                    },
                    "create_date": {
                      "title": "Create Date",
                      "type": "string",
                      "format": "date-time"
                    },
                    "store_id": {
                      "title": "Store Id",
                      "type": "string",
                      "format": "id"
                    },
                    "charge_id": {
                      "title": "Charge Id",
                      "type": "string",
                      "format": "id"
                    },
                    "organization_id": {
                      "title": "Organization Id",
                      "type": "string",
                      "format": "id"
                    },
                    "marketplace_id": {
                      "title": "Marketplace Id",
                      "type": "string"
                    },
                    "delivered_date": {
                      "title": "Delivered Date",
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_amount": {
                      "title": "Total Amount",
                      "anyOf": [
                        {
                          "maximum": 9223372036854776000,
                          "minimum": 1,
                          "type": "integer"
                        },
                        {
                          "maximum": 9223372036854776000,
                          "minimum": 0,
                          "type": "integer"
                        }
                      ]
                    },
                    "status": {
                      "title": "OrderStatus",
                      "enum": [
                        "submitted",
                        "total_finalized",
                        "delivered",
                        "charged",
                        "canceled"
                      ],
                      "type": "string",
                      "description": "An enumeration."
                    },
                    "track_number": {
                      "title": "Track Number",
                      "type": "string"
                    },
                    "updated_at": {
                      "title": "Updated At",
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotExistResponse",
                  "required": [
                    "error_code",
                    "error_message",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "title": "Error Code",
                      "type": "string"
                    },
                    "error_message": {
                      "title": "Error Message",
                      "type": "string"
                    },
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AuthenticationErrorResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Oauth2ClientCredentials": []
          }
        ]
      }
    },
    "/orders/{order_id}/charge": {
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Charge Order By Id",
        "operationId": "charge_order",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Order Id",
              "type": "string",
              "format": "id"
            },
            "name": "order_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "ChargeOrderSchema",
                  "required": [
                    "order",
                    "charge"
                  ],
                  "type": "object",
                  "properties": {
                    "order": {
                      "title": "Order",
                      "required": [
                        "id",
                        "create_date",
                        "organization_id",
                        "total_amount",
                        "status",
                        "track_number"
                      ],
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "Id",
                          "type": "string",
                          "format": "id"
                        },
                        "create_date": {
                          "title": "Create Date",
                          "type": "string",
                          "format": "date-time"
                        },
                        "store_id": {
                          "title": "Store Id",
                          "type": "string",
                          "format": "id"
                        },
                        "charge_id": {
                          "title": "Charge Id",
                          "type": "string",
                          "format": "id"
                        },
                        "organization_id": {
                          "title": "Organization Id",
                          "type": "string",
                          "format": "id"
                        },
                        "marketplace_id": {
                          "title": "Marketplace Id",
                          "type": "string"
                        },
                        "delivered_date": {
                          "title": "Delivered Date",
                          "type": "string",
                          "format": "date-time"
                        },
                        "total_amount": {
                          "title": "Total Amount",
                          "anyOf": [
                            {
                              "maximum": 9223372036854776000,
                              "minimum": 1,
                              "type": "integer"
                            },
                            {
                              "maximum": 9223372036854776000,
                              "minimum": 0,
                              "type": "integer"
                            }
                          ]
                        },
                        "status": {
                          "title": "OrderStatus",
                          "enum": [
                            "submitted",
                            "total_finalized",
                            "delivered",
                            "charged",
                            "canceled"
                          ],
                          "type": "string",
                          "description": "An enumeration."
                        },
                        "track_number": {
                          "title": "Track Number",
                          "type": "string"
                        },
                        "updated_at": {
                          "title": "Updated At",
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "additionalProperties": false
                    },
                    "charge": {
                      "title": "Charge",
                      "required": [
                        "id",
                        "create_date",
                        "type",
                        "status",
                        "amount",
                        "balance_transaction_id",
                        "consumer_fi_account_id",
                        "business_fi_account_id",
                        "organization_id",
                        "track_number"
                      ],
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "Id",
                          "type": "string",
                          "format": "id"
                        },
                        "create_date": {
                          "title": "Create Date",
                          "type": "string",
                          "format": "date-time"
                        },
                        "type": {
                          "title": "ChargeType",
                          "enum": [
                            "ACH_DEBIT"
                          ],
                          "type": "string",
                          "description": "An enumeration."
                        },
                        "status": {
                          "title": "ChargeStatus",
                          "enum": [
                            "pending",
                            "succeeded",
                            "failed"
                          ],
                          "type": "string",
                          "description": "An enumeration."
                        },
                        "amount": {
                          "title": "Amount",
                          "maximum": 9223372036854776000,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "balance_transaction_id": {
                          "title": "Balance Transaction Id",
                          "type": "string",
                          "format": "id"
                        },
                        "consumer_fi_account_id": {
                          "title": "Consumer Fi Account Id",
                          "type": "string",
                          "format": "id"
                        },
                        "business_fi_account_id": {
                          "title": "Business Fi Account Id",
                          "type": "string",
                          "format": "id"
                        },
                        "organization_id": {
                          "title": "Organization Id",
                          "type": "string",
                          "format": "id"
                        },
                        "marketplace_id": {
                          "title": "Marketplace Id",
                          "type": "string"
                        },
                        "track_number": {
                          "title": "Track Number",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotExistResponse",
                  "required": [
                    "error_code",
                    "error_message",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "title": "Error Code",
                      "type": "string"
                    },
                    "error_message": {
                      "title": "Error Message",
                      "type": "string"
                    },
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AuthenticationErrorResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Oauth2ClientCredentials": []
          }
        ]
      }
    },
    "/orders/{order_id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get Order",
        "description": "Get order by order id",
        "operationId": "get_order",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Order Id",
              "type": "string",
              "format": "id"
            },
            "name": "order_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Order",
                  "required": [
                    "id",
                    "create_date",
                    "organization_id",
                    "total_amount",
                    "status",
                    "track_number"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Id",
                      "type": "string",
                      "format": "id"
                    },
                    "create_date": {
                      "title": "Create Date",
                      "type": "string",
                      "format": "date-time"
                    },
                    "store_id": {
                      "title": "Store Id",
                      "type": "string",
                      "format": "id"
                    },
                    "charge_id": {
                      "title": "Charge Id",
                      "type": "string",
                      "format": "id"
                    },
                    "organization_id": {
                      "title": "Organization Id",
                      "type": "string",
                      "format": "id"
                    },
                    "marketplace_id": {
                      "title": "Marketplace Id",
                      "type": "string"
                    },
                    "delivered_date": {
                      "title": "Delivered Date",
                      "type": "string",
                      "format": "date-time"
                    },
                    "total_amount": {
                      "title": "Total Amount",
                      "anyOf": [
                        {
                          "maximum": 9223372036854776000,
                          "minimum": 1,
                          "type": "integer"
                        },
                        {
                          "maximum": 9223372036854776000,
                          "minimum": 0,
                          "type": "integer"
                        }
                      ]
                    },
                    "status": {
                      "title": "OrderStatus",
                      "enum": [
                        "submitted",
                        "total_finalized",
                        "delivered",
                        "charged",
                        "canceled"
                      ],
                      "type": "string",
                      "description": "An enumeration."
                    },
                    "track_number": {
                      "title": "Track Number",
                      "type": "string"
                    },
                    "updated_at": {
                      "title": "Updated At",
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotExistResponse",
                  "required": [
                    "error_code",
                    "error_message",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "title": "Error Code",
                      "type": "string"
                    },
                    "error_message": {
                      "title": "Error Message",
                      "type": "string"
                    },
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AuthenticationErrorResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotHavePermissionResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Oauth2ClientCredentials": []
          }
        ]
      }
    },
    "/payment_links": {
      "get": {
        "tags": [
          "Payment Links"
        ],
        "summary": "List Payment Links",
        "operationId": "list_payment_links",
        "parameters": [
          {
            "description": "Accepts `next_key` or `prev_key` from a valid paginated response",
            "required": false,
            "schema": {
              "title": "Key",
              "type": "string",
              "description": "Accepts `next_key` or `prev_key` from a valid paginated response"
            },
            "name": "key",
            "in": "query"
          },
          {
            "description": "Number of items to fetch",
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "Number of items to fetch",
              "default": 25
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaymentLinkPage",
                  "required": [
                    "total_count",
                    "prev_key",
                    "items",
                    "next_key"
                  ],
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "title": "Total Count",
                      "type": "integer",
                      "description": "Total number of items found for the query"
                    },
                    "prev_key": {
                      "title": "Prev Key",
                      "type": "string",
                      "description": "Cursor for the previous page"
                    },
                    "items": {
                      "title": "Items",
                      "type": "array",
                      "items": {
                        "title": "PaymentLinkWithLink",
                        "required": [
                          "id",
                          "organization_id",
                          "store_id",
                          "external_ticket_id",
                          "auto_charge",
                          "create_date",
                          "session_count",
                          "payment_link"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Id",
                            "type": "string",
                            "format": "id"
                          },
                          "short_code": {
                            "title": "Short Code",
                            "type": "string"
                          },
                          "organization_id": {
                            "title": "Organization Id",
                            "type": "string",
                            "format": "id"
                          },
                          "store_id": {
                            "title": "Store Id",
                            "type": "string",
                            "format": "id"
                          },
                          "external_ticket_id": {
                            "title": "External Ticket Id",
                            "type": "string"
                          },
                          "external_consumer_id": {
                            "title": "External Consumer Id",
                            "type": "string"
                          },
                          "products_json": {
                            "title": "Products Json",
                            "type": "array",
                            "items": {
                              "title": "ProductStoreDTO",
                              "required": [
                                "name",
                                "quantity",
                                "price_total"
                              ],
                              "type": "object",
                              "properties": {
                                "name": {
                                  "title": "Name",
                                  "type": "string"
                                },
                                "link": {
                                  "title": "Link",
                                  "type": "string"
                                },
                                "primary_image": {
                                  "title": "Primary Image",
                                  "type": "string"
                                },
                                "amount": {
                                  "title": "Amount",
                                  "maximum": 9223372036854776000,
                                  "minimum": 0,
                                  "type": "integer"
                                },
                                "quantity": {
                                  "title": "Quantity",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                },
                                "tax": {
                                  "title": "Tax",
                                  "type": "number"
                                },
                                "price_total": {
                                  "title": "Price Total",
                                  "type": "number"
                                }
                              }
                            }
                          },
                          "customer_json": {
                            "title": "CustomerDetailsStoreDTO",
                            "required": [
                              "first_name",
                              "last_name"
                            ],
                            "type": "object",
                            "properties": {
                              "first_name": {
                                "title": "First Name",
                                "type": "string"
                              },
                              "last_name": {
                                "title": "Last Name",
                                "type": "string"
                              },
                              "email": {
                                "title": "Email",
                                "type": "string"
                              },
                              "phone": {
                                "title": "Phone",
                                "type": "string"
                              },
                              "drivers_license": {
                                "title": "Drivers License",
                                "type": "string"
                              }
                            }
                          },
                          "invoice_type": {
                            "title": "InvoiceType",
                            "enum": [
                              "manual",
                              "treez"
                            ],
                            "type": "string",
                            "description": "An enumeration."
                          },
                          "invoice_date": {
                            "title": "Invoice Date",
                            "type": "string",
                            "format": "date-time"
                          },
                          "auto_charge": {
                            "title": "Auto Charge",
                            "type": "boolean"
                          },
                          "marketplace_id": {
                            "title": "Marketplace Id",
                            "type": "string"
                          },
                          "total_amount": {
                            "title": "Total Amount",
                            "maximum": 9223372036854776000,
                            "minimum": 1,
                            "type": "integer"
                          },
                          "create_date": {
                            "title": "Create Date",
                            "type": "string",
                            "format": "date-time"
                          },
                          "status": {
                            "title": "Status",
                            "type": "integer"
                          },
                          "session_count": {
                            "title": "Session Count",
                            "type": "integer"
                          },
                          "payment_link": {
                            "title": "Payment Link",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "next_key": {
                      "title": "Next Key",
                      "type": "string",
                      "description": "Cursor for the next page."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AuthenticationErrorResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotHavePermissionResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Oauth2ClientCredentials": []
          }
        ]
      },
      "post": {
        "tags": [
          "Payment Links"
        ],
        "summary": "Create Payment Link",
        "operationId": "create_payment_link",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "PaymentLinkCreateDTO",
                "required": [
                  "invoice_type",
                  "invoice_number",
                  "auto_charge"
                ],
                "type": "object",
                "properties": {
                  "invoice_type": {
                    "title": "InvoiceType",
                    "enum": [
                      "manual",
                      "treez"
                    ],
                    "type": "string",
                    "description": "An enumeration."
                  },
                  "invoice_number": {
                    "title": "Invoice Number",
                    "type": "string"
                  },
                  "auto_charge": {
                    "title": "Auto Charge",
                    "type": "boolean"
                  },
                  "notification_channel": {
                    "title": "Notification Channel",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "default": []
                  },
                  "expiry_date": {
                    "title": "Expiry Date",
                    "type": "string",
                    "format": "date-time"
                  },
                  "consumer_details": {
                    "title": "CustomerDetailsCreateDTO",
                    "required": [
                      "first_name",
                      "last_name"
                    ],
                    "type": "object",
                    "properties": {
                      "first_name": {
                        "title": "First Name",
                        "type": "string"
                      },
                      "last_name": {
                        "title": "Last Name",
                        "type": "string"
                      },
                      "email": {
                        "title": "Email",
                        "type": "string"
                      },
                      "phone": {
                        "title": "Phone",
                        "type": "string"
                      },
                      "drivers_license": {
                        "title": "Drivers License",
                        "type": "string"
                      }
                    }
                  },
                  "product_details": {
                    "title": "Product Details",
                    "type": "array",
                    "items": {
                      "title": "ProductCreateDTO",
                      "required": [
                        "name",
                        "amount",
                        "quantity",
                        "tax"
                      ],
                      "type": "object",
                      "properties": {
                        "name": {
                          "title": "Name",
                          "type": "string"
                        },
                        "link": {
                          "title": "Link",
                          "type": "string"
                        },
                        "primary_image": {
                          "title": "Primary Image",
                          "type": "string"
                        },
                        "amount": {
                          "title": "Amount",
                          "maximum": 9223372036854776000,
                          "minimum": 0,
                          "type": "integer"
                        },
                        "quantity": {
                          "title": "Quantity",
                          "type": "integer"
                        },
                        "tax": {
                          "title": "Tax",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "invoice_date": {
                    "title": "Invoice Date",
                    "type": "string",
                    "format": "date-time"
                  },
                  "total_amount": {
                    "title": "Total Amount",
                    "maximum": 9223372036854776000,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "marketplace_id": {
                    "title": "Marketplace Id",
                    "maxLength": 50,
                    "type": "string",
                    "description": "The marketplace id assigned during onboarding. (only for integrators)"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "CreatePaymentLinkResponse",
                  "required": [
                    "id",
                    "organization_id",
                    "store_id",
                    "external_ticket_id",
                    "auto_charge",
                    "create_date",
                    "is_created",
                    "payment_link_url"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Id",
                      "type": "string",
                      "format": "id"
                    },
                    "short_code": {
                      "title": "Short Code",
                      "type": "string"
                    },
                    "organization_id": {
                      "title": "Organization Id",
                      "type": "string",
                      "format": "id"
                    },
                    "store_id": {
                      "title": "Store Id",
                      "type": "string",
                      "format": "id"
                    },
                    "external_ticket_id": {
                      "title": "External Ticket Id",
                      "type": "string"
                    },
                    "external_consumer_id": {
                      "title": "External Consumer Id",
                      "type": "string"
                    },
                    "products_json": {
                      "title": "Products Json",
                      "type": "array",
                      "items": {
                        "title": "ProductStoreDTO",
                        "required": [
                          "name",
                          "quantity",
                          "price_total"
                        ],
                        "type": "object",
                        "properties": {
                          "name": {
                            "title": "Name",
                            "type": "string"
                          },
                          "link": {
                            "title": "Link",
                            "type": "string"
                          },
                          "primary_image": {
                            "title": "Primary Image",
                            "type": "string"
                          },
                          "amount": {
                            "title": "Amount",
                            "maximum": 9223372036854776000,
                            "minimum": 0,
                            "type": "integer"
                          },
                          "quantity": {
                            "title": "Quantity",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "number"
                              }
                            ]
                          },
                          "tax": {
                            "title": "Tax",
                            "type": "number"
                          },
                          "price_total": {
                            "title": "Price Total",
                            "type": "number"
                          }
                        }
                      }
                    },
                    "customer_json": {
                      "title": "CustomerDetailsStoreDTO",
                      "required": [
                        "first_name",
                        "last_name"
                      ],
                      "type": "object",
                      "properties": {
                        "first_name": {
                          "title": "First Name",
                          "type": "string"
                        },
                        "last_name": {
                          "title": "Last Name",
                          "type": "string"
                        },
                        "email": {
                          "title": "Email",
                          "type": "string"
                        },
                        "phone": {
                          "title": "Phone",
                          "type": "string"
                        },
                        "drivers_license": {
                          "title": "Drivers License",
                          "type": "string"
                        }
                      }
                    },
                    "invoice_type": {
                      "title": "InvoiceType",
                      "enum": [
                        "manual",
                        "treez"
                      ],
                      "type": "string",
                      "description": "An enumeration."
                    },
                    "invoice_date": {
                      "title": "Invoice Date",
                      "type": "string",
                      "format": "date-time"
                    },
                    "auto_charge": {
                      "title": "Auto Charge",
                      "type": "boolean"
                    },
                    "marketplace_id": {
                      "title": "Marketplace Id",
                      "type": "string"
                    },
                    "total_amount": {
                      "title": "Total Amount",
                      "maximum": 9223372036854776000,
                      "minimum": 1,
                      "type": "integer"
                    },
                    "create_date": {
                      "title": "Create Date",
                      "type": "string",
                      "format": "date-time"
                    },
                    "is_created": {
                      "title": "Is Created",
                      "type": "boolean"
                    },
                    "payment_link_url": {
                      "title": "Payment Link Url",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotExistResponse",
                  "required": [
                    "error_code",
                    "error_message",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "title": "Error Code",
                      "type": "string"
                    },
                    "error_message": {
                      "title": "Error Message",
                      "type": "string"
                    },
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AuthenticationErrorResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotHavePermissionResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Oauth2ClientCredentials": []
          }
        ]
      }
    },
    "/payment_links/{payment_link_id}": {
      "delete": {
        "tags": [
          "Payment Links"
        ],
        "summary": "Delete Payment Link",
        "operationId": "delete_payment_link",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Payment Link Id",
              "type": "string",
              "format": "id"
            },
            "name": "payment_link_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaymentLink",
                  "required": [
                    "id",
                    "organization_id",
                    "store_id",
                    "external_ticket_id",
                    "auto_charge",
                    "create_date"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Id",
                      "type": "string",
                      "format": "id"
                    },
                    "short_code": {
                      "title": "Short Code",
                      "type": "string"
                    },
                    "organization_id": {
                      "title": "Organization Id",
                      "type": "string",
                      "format": "id"
                    },
                    "store_id": {
                      "title": "Store Id",
                      "type": "string",
                      "format": "id"
                    },
                    "external_ticket_id": {
                      "title": "External Ticket Id",
                      "type": "string"
                    },
                    "external_consumer_id": {
                      "title": "External Consumer Id",
                      "type": "string"
                    },
                    "products_json": {
                      "title": "Products Json",
                      "type": "array",
                      "items": {
                        "title": "ProductStoreDTO",
                        "required": [
                          "name",
                          "quantity",
                          "price_total"
                        ],
                        "type": "object",
                        "properties": {
                          "name": {
                            "title": "Name",
                            "type": "string"
                          },
                          "link": {
                            "title": "Link",
                            "type": "string"
                          },
                          "primary_image": {
                            "title": "Primary Image",
                            "type": "string"
                          },
                          "amount": {
                            "title": "Amount",
                            "maximum": 9223372036854776000,
                            "minimum": 0,
                            "type": "integer"
                          },
                          "quantity": {
                            "title": "Quantity",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "number"
                              }
                            ]
                          },
                          "tax": {
                            "title": "Tax",
                            "type": "number"
                          },
                          "price_total": {
                            "title": "Price Total",
                            "type": "number"
                          }
                        }
                      }
                    },
                    "customer_json": {
                      "title": "CustomerDetailsStoreDTO",
                      "required": [
                        "first_name",
                        "last_name"
                      ],
                      "type": "object",
                      "properties": {
                        "first_name": {
                          "title": "First Name",
                          "type": "string"
                        },
                        "last_name": {
                          "title": "Last Name",
                          "type": "string"
                        },
                        "email": {
                          "title": "Email",
                          "type": "string"
                        },
                        "phone": {
                          "title": "Phone",
                          "type": "string"
                        },
                        "drivers_license": {
                          "title": "Drivers License",
                          "type": "string"
                        }
                      }
                    },
                    "invoice_type": {
                      "title": "InvoiceType",
                      "enum": [
                        "manual",
                        "treez"
                      ],
                      "type": "string",
                      "description": "An enumeration."
                    },
                    "invoice_date": {
                      "title": "Invoice Date",
                      "type": "string",
                      "format": "date-time"
                    },
                    "auto_charge": {
                      "title": "Auto Charge",
                      "type": "boolean"
                    },
                    "marketplace_id": {
                      "title": "Marketplace Id",
                      "type": "string"
                    },
                    "total_amount": {
                      "title": "Total Amount",
                      "maximum": 9223372036854776000,
                      "minimum": 1,
                      "type": "integer"
                    },
                    "create_date": {
                      "title": "Create Date",
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotExistResponse",
                  "required": [
                    "error_code",
                    "error_message",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "title": "Error Code",
                      "type": "string"
                    },
                    "error_message": {
                      "title": "Error Message",
                      "type": "string"
                    },
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AuthenticationErrorResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotHavePermissionResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Oauth2ClientCredentials": []
          }
        ]
      }
    },
    "/sessions": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "List Sessions",
        "operationId": "list_sessions",
        "parameters": [
          {
            "description": "Accepts `next_key` or `prev_key` from a valid paginated response",
            "required": false,
            "schema": {
              "title": "Key",
              "type": "string",
              "description": "Accepts `next_key` or `prev_key` from a valid paginated response"
            },
            "name": "key",
            "in": "query"
          },
          {
            "description": "Number of items to fetch",
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "Number of items to fetch",
              "default": 25
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "SessionsWithConsumerInfoPage",
                  "required": [
                    "total_count",
                    "prev_key",
                    "items",
                    "next_key"
                  ],
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "title": "Total Count",
                      "type": "integer",
                      "description": "Total number of items found for the query"
                    },
                    "prev_key": {
                      "title": "Prev Key",
                      "type": "string",
                      "description": "Cursor for the previous page"
                    },
                    "items": {
                      "title": "Items",
                      "type": "array",
                      "items": {
                        "title": "SessionWithConsumerInfo",
                        "required": [
                          "id",
                          "create_date",
                          "status",
                          "organization_id",
                          "type",
                          "total_amount",
                          "is_valid_consumer",
                          "is_valid_bank_account_selected",
                          "is_sufficient_funds",
                          "fees",
                          "track_number",
                          "order_id",
                          "consumer_profile_id",
                          "first_name",
                          "last_name",
                          "email",
                          "phone"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Id",
                            "type": "string",
                            "description": "The session identifier.",
                            "format": "id"
                          },
                          "create_date": {
                            "title": "Create Date",
                            "type": "string",
                            "description": "ISO 8601 datetime on which the session was created.",
                            "format": "date-time"
                          },
                          "status": {
                            "allOf": [
                              {
                                "title": "SessionStatus",
                                "enum": [
                                  "started",
                                  "completed",
                                  "finalized "
                                ],
                                "type": "string",
                                "description": "An enumeration."
                              }
                            ],
                            "description": "This indicates the current status of the session."
                          },
                          "organization_id": {
                            "title": "Organization Id",
                            "type": "string",
                            "description": "The identifier of the organization this session belongs to.",
                            "format": "id"
                          },
                          "type": {
                            "allOf": [
                              {
                                "title": "SessionType",
                                "enum": [
                                  "consumer_checkout",
                                  "in_store_checkout"
                                ],
                                "type": "string",
                                "description": "An enumeration."
                              }
                            ],
                            "description": "The type of the session."
                          },
                          "total_amount": {
                            "title": "Total Amount",
                            "maximum": 9223372036854776000,
                            "minimum": 1,
                            "type": "integer",
                            "description": "The session amount in the minor unit of the currency. For dollars, for example, this is cents."
                          },
                          "is_valid_consumer": {
                            "title": "Is Valid Consumer",
                            "type": "boolean",
                            "description": "Whether or not this session has been associated with a consumer."
                          },
                          "is_valid_bank_account_selected": {
                            "title": "Is Valid Bank Account Selected",
                            "type": "boolean",
                            "description": "Whether or not a valid bank account has been associated with this session by a consumer."
                          },
                          "is_sufficient_funds": {
                            "title": "Is Sufficient Funds",
                            "type": "boolean",
                            "description": "Whether or not there are sufficient funds in the associated bank account."
                          },
                          "consent_text": {
                            "title": "Consent Text",
                            "type": "string",
                            "description": "The consent text which the customer agreed to.",
                            "default": "I authorize Swifter to debit my bank account and save my authorization for future use with Swifter."
                          },
                          "fees": {
                            "title": "Fees",
                            "maximum": 9223372036854776000,
                            "minimum": 0,
                            "type": "integer",
                            "description": "The session fees amount in the minor unit of the currency. For dollars, for example, this is cents."
                          },
                          "track_number": {
                            "title": "Track Number",
                            "type": "string",
                            "description": "A human-friendly identifier associated with the session."
                          },
                          "marketplace_id": {
                            "title": "Marketplace Id",
                            "type": "string",
                            "description": "The identifier of marketplace which created this session."
                          },
                          "order_id": {
                            "title": "Order Id",
                            "type": "string",
                            "description": "The order identifier for a completed session.",
                            "format": "id"
                          },
                          "consumer_profile_id": {
                            "title": "Consumer Profile Id",
                            "type": "string",
                            "description": "The consumer identifier associated with this session.",
                            "format": "id"
                          },
                          "first_name": {
                            "title": "First Name",
                            "type": "string",
                            "description": "First Name of the consumer."
                          },
                          "last_name": {
                            "title": "Last Name",
                            "type": "string",
                            "description": "Last Name of the consumer."
                          },
                          "email": {
                            "title": "Email",
                            "type": "string",
                            "description": "Email address of the consumer.",
                            "format": "email"
                          },
                          "phone": {
                            "title": "Phone",
                            "type": "string",
                            "description": "Phone Number of the consumer."
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "next_key": {
                      "title": "Next Key",
                      "type": "string",
                      "description": "Cursor for the next page."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AuthenticationErrorResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotHavePermissionResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Oauth2ClientCredentials": []
          }
        ]
      },
      "post": {
        "tags": [
          "Sessions"
        ],
        "summary": "Create a Session",
        "description": "Create a checkout session",
        "operationId": "create_session",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "SessionCreateDTO",
                "required": [
                  "amount",
                  "type",
                  "consumer_info"
                ],
                "type": "object",
                "properties": {
                  "amount": {
                    "title": "Amount",
                    "maximum": 9223372036854776000,
                    "minimum": 1,
                    "type": "integer",
                    "description": "The session amount in the minor unit of the currency excluding fees. For dollars, for example, this is cents."
                  },
                  "type": {
                    "allOf": [
                      {
                        "title": "SessionType",
                        "enum": [
                          "consumer_checkout",
                          "in_store_checkout"
                        ],
                        "type": "string",
                        "description": "An enumeration."
                      }
                    ],
                    "description": "The type of session."
                  },
                  "consumer_info": {
                    "title": "Consumer Info",
                    "allOf": [
                      {
                        "title": "ConsumerInfoDTO",
                        "required": [
                          "first_name",
                          "last_name"
                        ],
                        "type": "object",
                        "properties": {
                          "first_name": {
                            "title": "First Name",
                            "type": "string"
                          },
                          "last_name": {
                            "title": "Last Name",
                            "type": "string"
                          },
                          "email": {
                            "title": "Email",
                            "type": "string",
                            "format": "email"
                          },
                          "phone": {
                            "title": "Phone",
                            "type": "string"
                          },
                          "drivers_license": {
                            "title": "Drivers License",
                            "type": "string"
                          }
                        }
                      }
                    ],
                    "description": "Basic Consumer Info for KYC"
                  },
                  "fees": {
                    "title": "Fees",
                    "maximum": 9223372036854776000,
                    "minimum": 0,
                    "type": "integer",
                    "description": "The fees in minor unit of currency to be levied to the customer. For dollars, for example, this is in cents. Defaults to the fees configured in Organization Settings."
                  },
                  "marketplace_id": {
                    "title": "Marketplace Id",
                    "maxLength": 50,
                    "type": "string",
                    "description": "The marketplace id assigned during onboarding. (only for integrators)"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Session",
                  "required": [
                    "id",
                    "create_date",
                    "status",
                    "organization_id",
                    "type",
                    "total_amount",
                    "is_valid_consumer",
                    "is_valid_bank_account_selected",
                    "is_sufficient_funds",
                    "fees",
                    "track_number"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Id",
                      "type": "string",
                      "description": "The session identifier.",
                      "format": "id"
                    },
                    "create_date": {
                      "title": "Create Date",
                      "type": "string",
                      "description": "ISO 8601 datetime on which the session was created.",
                      "format": "date-time"
                    },
                    "status": {
                      "allOf": [
                        {
                          "title": "SessionStatus",
                          "enum": [
                            "started",
                            "completed",
                            "finalized "
                          ],
                          "type": "string",
                          "description": "An enumeration."
                        }
                      ],
                      "description": "This indicates the current status of the session."
                    },
                    "organization_id": {
                      "title": "Organization Id",
                      "type": "string",
                      "description": "The identifier of the organization this session belongs to.",
                      "format": "id"
                    },
                    "type": {
                      "allOf": [
                        {
                          "title": "SessionType",
                          "enum": [
                            "consumer_checkout",
                            "in_store_checkout"
                          ],
                          "type": "string",
                          "description": "An enumeration."
                        }
                      ],
                      "description": "The type of the session."
                    },
                    "total_amount": {
                      "title": "Total Amount",
                      "maximum": 9223372036854776000,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The session amount in the minor unit of the currency. For dollars, for example, this is cents."
                    },
                    "is_valid_consumer": {
                      "title": "Is Valid Consumer",
                      "type": "boolean",
                      "description": "Whether or not this session has been associated with a consumer."
                    },
                    "is_valid_bank_account_selected": {
                      "title": "Is Valid Bank Account Selected",
                      "type": "boolean",
                      "description": "Whether or not a valid bank account has been associated with this session by a consumer."
                    },
                    "is_sufficient_funds": {
                      "title": "Is Sufficient Funds",
                      "type": "boolean",
                      "description": "Whether or not there are sufficient funds in the associated bank account."
                    },
                    "consent_text": {
                      "title": "Consent Text",
                      "type": "string",
                      "description": "The consent text which the customer agreed to.",
                      "default": "I authorize Swifter to debit my bank account and save my authorization for future use with Swifter."
                    },
                    "fees": {
                      "title": "Fees",
                      "maximum": 9223372036854776000,
                      "minimum": 0,
                      "type": "integer",
                      "description": "The session fees amount in the minor unit of the currency. For dollars, for example, this is cents."
                    },
                    "track_number": {
                      "title": "Track Number",
                      "type": "string",
                      "description": "A human-friendly identifier associated with the session."
                    },
                    "marketplace_id": {
                      "title": "Marketplace Id",
                      "type": "string",
                      "description": "The identifier of marketplace which created this session."
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotExistResponse",
                  "required": [
                    "error_code",
                    "error_message",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "title": "Error Code",
                      "type": "string"
                    },
                    "error_message": {
                      "title": "Error Message",
                      "type": "string"
                    },
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AuthenticationErrorResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotHavePermissionResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Oauth2ClientCredentials": []
          }
        ]
      }
    },
    "/sessions/{session_id}": {
      "get": {
        "tags": [
          "Sessions"
        ],
        "summary": "Retrieve a Session",
        "description": "Retrieve session info by id",
        "operationId": "get_session",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Session Id",
              "type": "string",
              "format": "id"
            },
            "name": "session_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "SessionWithDetails",
                  "required": [
                    "id",
                    "create_date",
                    "status",
                    "organization_id",
                    "type",
                    "total_amount",
                    "is_valid_consumer",
                    "is_valid_bank_account_selected",
                    "is_sufficient_funds",
                    "fees",
                    "track_number",
                    "consumer_info"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Id",
                      "type": "string",
                      "description": "The session identifier.",
                      "format": "id"
                    },
                    "create_date": {
                      "title": "Create Date",
                      "type": "string",
                      "description": "ISO 8601 datetime on which the session was created.",
                      "format": "date-time"
                    },
                    "status": {
                      "allOf": [
                        {
                          "title": "SessionStatus",
                          "enum": [
                            "started",
                            "completed",
                            "finalized "
                          ],
                          "type": "string",
                          "description": "An enumeration."
                        }
                      ],
                      "description": "This indicates the current status of the session."
                    },
                    "organization_id": {
                      "title": "Organization Id",
                      "type": "string",
                      "description": "The identifier of the organization this session belongs to.",
                      "format": "id"
                    },
                    "type": {
                      "allOf": [
                        {
                          "title": "SessionType",
                          "enum": [
                            "consumer_checkout",
                            "in_store_checkout"
                          ],
                          "type": "string",
                          "description": "An enumeration."
                        }
                      ],
                      "description": "The type of the session."
                    },
                    "total_amount": {
                      "title": "Total Amount",
                      "maximum": 9223372036854776000,
                      "minimum": 1,
                      "type": "integer",
                      "description": "The session amount in the minor unit of the currency. For dollars, for example, this is cents."
                    },
                    "is_valid_consumer": {
                      "title": "Is Valid Consumer",
                      "type": "boolean",
                      "description": "Whether or not this session has been associated with a consumer."
                    },
                    "is_valid_bank_account_selected": {
                      "title": "Is Valid Bank Account Selected",
                      "type": "boolean",
                      "description": "Whether or not a valid bank account has been associated with this session by a consumer."
                    },
                    "is_sufficient_funds": {
                      "title": "Is Sufficient Funds",
                      "type": "boolean",
                      "description": "Whether or not there are sufficient funds in the associated bank account."
                    },
                    "consent_text": {
                      "title": "Consent Text",
                      "type": "string",
                      "description": "The consent text which the customer agreed to.",
                      "default": "I authorize Swifter to debit my bank account and save my authorization for future use with Swifter."
                    },
                    "fees": {
                      "title": "Fees",
                      "maximum": 9223372036854776000,
                      "minimum": 0,
                      "type": "integer",
                      "description": "The session fees amount in the minor unit of the currency. For dollars, for example, this is cents."
                    },
                    "track_number": {
                      "title": "Track Number",
                      "type": "string",
                      "description": "A human-friendly identifier associated with the session."
                    },
                    "marketplace_id": {
                      "title": "Marketplace Id",
                      "type": "string",
                      "description": "The identifier of marketplace which created this session."
                    },
                    "consumer_info": {
                      "title": "ConsumerInfoForSession",
                      "required": [
                        "id",
                        "session_id",
                        "first_name",
                        "last_name",
                        "drivers_license",
                        "create_date"
                      ],
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "Id",
                          "type": "string",
                          "format": "id"
                        },
                        "session_id": {
                          "title": "Session Id",
                          "type": "string",
                          "format": "id"
                        },
                        "email": {
                          "title": "Email",
                          "type": "string",
                          "format": "email"
                        },
                        "first_name": {
                          "title": "First Name",
                          "type": "string"
                        },
                        "last_name": {
                          "title": "Last Name",
                          "type": "string"
                        },
                        "phone": {
                          "title": "Phone",
                          "type": "string"
                        },
                        "drivers_license": {
                          "title": "Drivers License",
                          "type": "string"
                        },
                        "create_date": {
                          "title": "Create Date",
                          "type": "string",
                          "format": "date-time"
                        },
                        "consumer_profile_id": {
                          "title": "Consumer Profile Id",
                          "type": "string",
                          "format": "id"
                        },
                        "consumer_id": {
                          "title": "Consumer Id",
                          "type": "string",
                          "format": "id"
                        },
                        "consumer_fi_account_id": {
                          "title": "Consumer Fi Account Id",
                          "type": "string",
                          "format": "id"
                        },
                        "institution_name": {
                          "title": "Institution Name",
                          "type": "string"
                        },
                        "account_name": {
                          "title": "Account Name",
                          "type": "string"
                        },
                        "order_id": {
                          "title": "Order Id",
                          "type": "string",
                          "format": "id"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotExistResponse",
                  "required": [
                    "error_code",
                    "error_message",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "title": "Error Code",
                      "type": "string"
                    },
                    "error_message": {
                      "title": "Error Message",
                      "type": "string"
                    },
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AuthenticationErrorResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotHavePermissionResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Oauth2ClientCredentials": []
          }
        ]
      }
    },
    "/webhooks": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "List Webhooks",
        "operationId": "list_webhooks",
        "parameters": [
          {
            "description": "Accepts `next_key` or `prev_key` from a valid paginated response",
            "required": false,
            "schema": {
              "title": "Key",
              "type": "string",
              "description": "Accepts `next_key` or `prev_key` from a valid paginated response"
            },
            "name": "key",
            "in": "query"
          },
          {
            "description": "Number of items to fetch",
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "Number of items to fetch",
              "default": 25
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "WebhookPage",
                  "required": [
                    "total_count",
                    "prev_key",
                    "items",
                    "next_key"
                  ],
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "title": "Total Count",
                      "type": "integer",
                      "description": "Total number of items found for the query"
                    },
                    "prev_key": {
                      "title": "Prev Key",
                      "type": "string",
                      "description": "Cursor for the previous page"
                    },
                    "items": {
                      "title": "Items",
                      "type": "array",
                      "items": {
                        "title": "RedactedWebhook",
                        "required": [
                          "id",
                          "organization_id",
                          "endpoint",
                          "event",
                          "status",
                          "create_date",
                          "update_date"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Id",
                            "type": "string",
                            "format": "id"
                          },
                          "organization_id": {
                            "title": "Organization Id",
                            "type": "string",
                            "format": "id"
                          },
                          "endpoint": {
                            "title": "Endpoint",
                            "maxLength": 65536,
                            "minLength": 1,
                            "type": "string",
                            "format": "uri"
                          },
                          "event": {
                            "title": "Event",
                            "type": "string"
                          },
                          "status": {
                            "title": "WebhookStatus",
                            "enum": [
                              "active",
                              "suspended"
                            ],
                            "type": "string",
                            "description": "An enumeration."
                          },
                          "description": {
                            "title": "Description",
                            "type": "string"
                          },
                          "create_date": {
                            "title": "Create Date",
                            "type": "string",
                            "format": "date-time"
                          },
                          "update_date": {
                            "title": "Update Date",
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "next_key": {
                      "title": "Next Key",
                      "type": "string",
                      "description": "Cursor for the next page."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AuthenticationErrorResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotHavePermissionResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Oauth2ClientCredentials": []
          }
        ]
      },
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Create Webhook",
        "operationId": "create_webhook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "WebhookCreateDTO",
                "required": [
                  "endpoint",
                  "event"
                ],
                "type": "object",
                "properties": {
                  "endpoint": {
                    "title": "Endpoint",
                    "maxLength": 65536,
                    "minLength": 1,
                    "type": "string",
                    "format": "uri"
                  },
                  "event": {
                    "title": "Event",
                    "anyOf": [
                      {
                        "title": "ChargeEvents",
                        "enum": [
                          "charge.created",
                          "charge.succeeded",
                          "charge.failed",
                          "charge.retried"
                        ],
                        "type": "string",
                        "description": "An enumeration."
                      },
                      {
                        "title": "OrderEvents",
                        "enum": [
                          "order.created",
                          "order.total_finalized",
                          "order.canceled",
                          "order.charged"
                        ],
                        "type": "string",
                        "description": "An enumeration."
                      },
                      {
                        "title": "SessionEvents",
                        "enum": [
                          "session.created",
                          "session.consumer_connected",
                          "session.fi_account_connected",
                          "session.authorized",
                          "session.authorize_failed",
                          "session.finalized",
                          "session.log"
                        ],
                        "type": "string",
                        "description": "An enumeration."
                      },
                      {
                        "title": "RefundEvents",
                        "enum": [
                          "refund.created",
                          "refund.succeeded",
                          "refund.failed"
                        ],
                        "type": "string",
                        "description": "An enumeration."
                      }
                    ]
                  },
                  "description": {
                    "title": "Description",
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Webhook",
                  "required": [
                    "id",
                    "organization_id",
                    "endpoint",
                    "event",
                    "status",
                    "create_date",
                    "update_date",
                    "signing_secret"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Id",
                      "type": "string",
                      "format": "id"
                    },
                    "organization_id": {
                      "title": "Organization Id",
                      "type": "string",
                      "format": "id"
                    },
                    "endpoint": {
                      "title": "Endpoint",
                      "maxLength": 65536,
                      "minLength": 1,
                      "type": "string",
                      "format": "uri"
                    },
                    "event": {
                      "title": "Event",
                      "type": "string"
                    },
                    "status": {
                      "title": "WebhookStatus",
                      "enum": [
                        "active",
                        "suspended"
                      ],
                      "type": "string",
                      "description": "An enumeration."
                    },
                    "description": {
                      "title": "Description",
                      "type": "string"
                    },
                    "create_date": {
                      "title": "Create Date",
                      "type": "string",
                      "format": "date-time"
                    },
                    "update_date": {
                      "title": "Update Date",
                      "type": "string",
                      "format": "date-time"
                    },
                    "signing_secret": {
                      "title": "Signing Secret",
                      "type": "string",
                      "format": "password",
                      "writeOnly": true
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AuthenticationErrorResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotHavePermissionResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Oauth2ClientCredentials": []
          }
        ]
      }
    },
    "/webhooks/{webhook_id}": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Get Webhook",
        "operationId": "get_webhook",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Webhook Id",
              "type": "string",
              "format": "id"
            },
            "name": "webhook_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "RedactedWebhook",
                  "required": [
                    "id",
                    "organization_id",
                    "endpoint",
                    "event",
                    "status",
                    "create_date",
                    "update_date"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Id",
                      "type": "string",
                      "format": "id"
                    },
                    "organization_id": {
                      "title": "Organization Id",
                      "type": "string",
                      "format": "id"
                    },
                    "endpoint": {
                      "title": "Endpoint",
                      "maxLength": 65536,
                      "minLength": 1,
                      "type": "string",
                      "format": "uri"
                    },
                    "event": {
                      "title": "Event",
                      "type": "string"
                    },
                    "status": {
                      "title": "WebhookStatus",
                      "enum": [
                        "active",
                        "suspended"
                      ],
                      "type": "string",
                      "description": "An enumeration."
                    },
                    "description": {
                      "title": "Description",
                      "type": "string"
                    },
                    "create_date": {
                      "title": "Create Date",
                      "type": "string",
                      "format": "date-time"
                    },
                    "update_date": {
                      "title": "Update Date",
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotExistResponse",
                  "required": [
                    "error_code",
                    "error_message",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "title": "Error Code",
                      "type": "string"
                    },
                    "error_message": {
                      "title": "Error Message",
                      "type": "string"
                    },
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AuthenticationErrorResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotHavePermissionResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Oauth2ClientCredentials": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Delete Webhook",
        "operationId": "delete_webhook",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Webhook Id",
              "type": "string",
              "format": "id"
            },
            "name": "webhook_id",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "RedactedWebhook",
                  "required": [
                    "id",
                    "organization_id",
                    "endpoint",
                    "event",
                    "status",
                    "create_date",
                    "update_date"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Id",
                      "type": "string",
                      "format": "id"
                    },
                    "organization_id": {
                      "title": "Organization Id",
                      "type": "string",
                      "format": "id"
                    },
                    "endpoint": {
                      "title": "Endpoint",
                      "maxLength": 65536,
                      "minLength": 1,
                      "type": "string",
                      "format": "uri"
                    },
                    "event": {
                      "title": "Event",
                      "type": "string"
                    },
                    "status": {
                      "title": "WebhookStatus",
                      "enum": [
                        "active",
                        "suspended"
                      ],
                      "type": "string",
                      "description": "An enumeration."
                    },
                    "description": {
                      "title": "Description",
                      "type": "string"
                    },
                    "create_date": {
                      "title": "Create Date",
                      "type": "string",
                      "format": "date-time"
                    },
                    "update_date": {
                      "title": "Update Date",
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotExistResponse",
                  "required": [
                    "error_code",
                    "error_message",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "title": "Error Code",
                      "type": "string"
                    },
                    "error_message": {
                      "title": "Error Message",
                      "type": "string"
                    },
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AuthenticationErrorResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotHavePermissionResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Oauth2ClientCredentials": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Update Webhook",
        "operationId": "update_webhook",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Webhook Id",
              "type": "string",
              "format": "id"
            },
            "name": "webhook_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "WebhookUpdateDTO",
                "type": "object",
                "properties": {
                  "status": {
                    "title": "WebhookStatus",
                    "enum": [
                      "active",
                      "suspended"
                    ],
                    "type": "string",
                    "description": "An enumeration."
                  },
                  "description": {
                    "title": "Description",
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "RedactedWebhook",
                  "required": [
                    "id",
                    "organization_id",
                    "endpoint",
                    "event",
                    "status",
                    "create_date",
                    "update_date"
                  ],
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "Id",
                      "type": "string",
                      "format": "id"
                    },
                    "organization_id": {
                      "title": "Organization Id",
                      "type": "string",
                      "format": "id"
                    },
                    "endpoint": {
                      "title": "Endpoint",
                      "maxLength": 65536,
                      "minLength": 1,
                      "type": "string",
                      "format": "uri"
                    },
                    "event": {
                      "title": "Event",
                      "type": "string"
                    },
                    "status": {
                      "title": "WebhookStatus",
                      "enum": [
                        "active",
                        "suspended"
                      ],
                      "type": "string",
                      "description": "An enumeration."
                    },
                    "description": {
                      "title": "Description",
                      "type": "string"
                    },
                    "create_date": {
                      "title": "Create Date",
                      "type": "string",
                      "format": "date-time"
                    },
                    "update_date": {
                      "title": "Update Date",
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotExistResponse",
                  "required": [
                    "error_code",
                    "error_message",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "title": "Error Code",
                      "type": "string"
                    },
                    "error_message": {
                      "title": "Error Message",
                      "type": "string"
                    },
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AuthenticationErrorResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotHavePermissionResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Oauth2ClientCredentials": []
          }
        ]
      }
    },
    "/webhooks/{webhook_id}/deliveries": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Get Webhook Deliveries",
        "operationId": "list_webhook_deliveries",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Webhook Id",
              "type": "string",
              "format": "id"
            },
            "name": "webhook_id",
            "in": "path"
          },
          {
            "description": "Accepts `next_key` or `prev_key` from a valid paginated response",
            "required": false,
            "schema": {
              "title": "Key",
              "type": "string",
              "description": "Accepts `next_key` or `prev_key` from a valid paginated response"
            },
            "name": "key",
            "in": "query"
          },
          {
            "description": "Number of items to fetch",
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer",
              "description": "Number of items to fetch",
              "default": 25
            },
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "WebhookDeliveriesWithEventPage",
                  "required": [
                    "total_count",
                    "prev_key",
                    "items",
                    "next_key"
                  ],
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "title": "Total Count",
                      "type": "integer",
                      "description": "Total number of items found for the query"
                    },
                    "prev_key": {
                      "title": "Prev Key",
                      "type": "string",
                      "description": "Cursor for the previous page"
                    },
                    "items": {
                      "title": "Items",
                      "type": "array",
                      "items": {
                        "title": "WebhookDeliveryWithEvent",
                        "required": [
                          "id",
                          "webhook_id",
                          "event_id",
                          "status",
                          "create_date",
                          "update_date",
                          "event"
                        ],
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "Id",
                            "type": "string",
                            "format": "id"
                          },
                          "webhook_id": {
                            "title": "Webhook Id",
                            "type": "string",
                            "format": "id"
                          },
                          "event_id": {
                            "title": "Event Id",
                            "type": "string",
                            "format": "id"
                          },
                          "status": {
                            "title": "WebhookDeliveryStatus",
                            "enum": [
                              "success",
                              "failed"
                            ],
                            "type": "string",
                            "description": "An enumeration."
                          },
                          "response_status": {
                            "title": "Response Status",
                            "type": "integer"
                          },
                          "response": {
                            "title": "Response"
                          },
                          "create_date": {
                            "title": "Create Date",
                            "type": "string",
                            "format": "date-time"
                          },
                          "update_date": {
                            "title": "Update Date",
                            "type": "string",
                            "format": "date-time"
                          },
                          "event": {
                            "title": "Event",
                            "required": [
                              "id",
                              "organization_id",
                              "entity_type",
                              "entity_id",
                              "name",
                              "create_date"
                            ],
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "Id",
                                "type": "string",
                                "format": "id"
                              },
                              "organization_id": {
                                "title": "Organization Id",
                                "type": "string",
                                "format": "id"
                              },
                              "actor_id": {
                                "title": "Actor Id",
                                "type": "string",
                                "format": "id"
                              },
                              "entity_type": {
                                "title": "Entity Type",
                                "type": "string"
                              },
                              "entity_id": {
                                "title": "Entity Id",
                                "type": "string",
                                "format": "id"
                              },
                              "name": {
                                "title": "Name",
                                "type": "string"
                              },
                              "payload": {
                                "title": "Payload"
                              },
                              "create_date": {
                                "title": "Create Date",
                                "type": "string",
                                "format": "date-time"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "next_key": {
                      "title": "Next Key",
                      "type": "string",
                      "description": "Cursor for the next page."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotExistResponse",
                  "required": [
                    "error_code",
                    "error_message",
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "error_code": {
                      "title": "Error Code",
                      "type": "string"
                    },
                    "error_message": {
                      "title": "Error Message",
                      "type": "string"
                    },
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "AuthenticationErrorResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Does not have permission",
            "content": {
              "application/json": {
                "schema": {
                  "title": "DoesNotHavePermissionResponse",
                  "required": [
                    "message"
                  ],
                  "type": "object",
                  "properties": {
                    "message": {
                      "title": "Message",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "title": "HTTPValidationError",
                  "type": "object",
                  "properties": {
                    "detail": {
                      "title": "Detail",
                      "type": "array",
                      "items": {
                        "title": "ValidationError",
                        "required": [
                          "loc",
                          "msg",
                          "type"
                        ],
                        "type": "object",
                        "properties": {
                          "loc": {
                            "title": "Location",
                            "type": "array",
                            "items": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "integer"
                                }
                              ]
                            }
                          },
                          "msg": {
                            "title": "Message",
                            "type": "string"
                          },
                          "type": {
                            "title": "Error Type",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Oauth2ClientCredentials": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Oauth2ClientCredentials": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "scopes": {},
            "tokenUrl": "https://auth.swifterhq.com/oauth2/token"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://api.swifterhq.com/api/v2.0",
      "description": "Live Server"
    },
    {
      "url": "https://api-sandbox.swifterhq.com/api/v2.0",
      "description": "Sandbox Server"
    }
  ]
}